For HW5 I chose to improve upon my sudoku solver and add a GUI to the solution as a feature. My solution implements the Template Method pattern and the Strategy Pattern in the Solver class. I did not see anywhere to use another design pattern that would have felt natural and not being forced. I thought about using the Façade Pattern on the PuzzleReader and PuzzleWriter classes, since they both work with files, but the code in my implementation was too different, and, in the end, it didn’t make sense to use it.
To improve my design I added a while loop to the Solve() method and changed the order the solvers are used. This way, the most efficient solver is used first, and the while loop allows the solvers to work together.
I also removed my custom Point class and used the System.Drawing.Point class that already exists. In Puzzle.cs I changed the name of the Size variable to BlockSize and in PuzzleReader.cs I changed a local variable n to nRows to make them more communitive. My BacktrackingSolver was not fully implemented and I attempted to finish it but did not end up getting it to work. I added a try catch block to PuzzleReader to check for null files and files that do not exist.
I added a state chart and redid my class and interaction diagrams to fix mistakes and add changes I made to the design.
I added more tests to make the testing more thorough and fixed previously failing test cases.
